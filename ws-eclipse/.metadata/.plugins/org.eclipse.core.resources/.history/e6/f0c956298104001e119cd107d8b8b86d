package application;

public class Program {
	public class MergeSort {
	    public static void merge(int[] A, int p, int q, int r) {
	        int n1 = q - p + 1;
	        int n2 = r - q;
	        int[] L = new int[n1];
	        int[] R = new int[n2];

	        for (int i = 0; i < n1; i++) {
	            L[i] = A[p + i];
	        }

	        for (int j = 0; j < n2; j++) {
	            R[j] = A[q + j + 1];
	        }

	        L[n1] = Integer.MAX_VALUE;
	        R[n2] = Integer.MAX_VALUE;
	        int i = 0;
	        int j = 0;

	        for (int k = p; k <= r; k++) {
	            if (L[i] <= R[j]) {
	                A[k] = L[i];
	                i++;
	            } else {
	                A[k] = R[j];
	                j++;
	            }
	        }

	        // Exibir visualmente a lista a cada iteração do merge
	        System.out.print("Merge: ");
	        for (int k = p; k <= r; k++) {
	            System.out.print(A[k] + " ");
	        }
	        System.out.println();
	    }

	    public static void mergeSort(int[] A, int p, int r) {
	        if (p < r) {
	            int q = (p + r) / 2;
	            mergeSort(A, p, q);
	            mergeSort(A, q + 1, r);
	            merge(A, p, q, r);
	        }
	    }

	    public static void main(String[] args) {
	        int[] arr = {3, 41, 52, 26, 38, 57, 9, 49};
	        System.out.print("Lista original: ");
	        for (int num : arr) {
	            System.out.print(num + " ");
	        }
	        System.out.println();

	        mergeSort(arr, 0, arr.length - 1);

	        System.out.print("Lista ordenada: ");
	        for (int num : arr) {
	            System.out.print(num + " ");
	        }
	        System.out.println();
	    }
	}
}
